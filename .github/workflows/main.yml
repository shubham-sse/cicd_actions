name: "Build & Release"

on:
  pull_request:
    branches: 
      - main
    types: [closed]
  # push:
  #   branches:
  #     - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'
      
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'

      - name: Install Dependencies
        run: flutter pub get

      - name: Read version from pubspec.yaml
        id: pubspec_version
        run: |
          VERSION_LINE=$(grep -E '^version:' pubspec.yaml | head -1 | awk '{print $2}')
          BUILD_NAME="${VERSION_LINE%%+*}"
          BUILD_NUMBER="${VERSION_LINE##*+}"
          if [ "$BUILD_NAME" = "$BUILD_NUMBER" ]; then
            BUILD_NUMBER=1
          fi
          echo "BUILD_NAME=$BUILD_NAME" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV

      - name: Build APK
        run: flutter build apk --release --build-name "$BUILD_NAME" --build-number "$BUILD_NUMBER"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ env.BUILD_NAME }}+${{ env.BUILD_NUMBER }}
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Distribute to Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app "${{ secrets.FIREBASE_APP_ID }}" \
            --groups "internal" \
            --release-notes-file "lib/release_note.md"
      